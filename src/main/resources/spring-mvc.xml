<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">  

    <!-- 自动扫描该包 -->  
    <context:component-scan base-package="com.bedrock" />  
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean>  
      
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>

<!--     <mvc:interceptors>    
    <mvc:interceptor>    
        匹配的是url路径， 如果不配置或/**,将拦截所有的Controller  
        <mvc:mapping path="/**" /> 
        需排除拦截的地址  
   		<mvc:exclude-mapping path="/login"/>
   		<mvc:exclude-mapping path="/getImageCode"/>
   		<mvc:exclude-mapping path="/check"/>
        <bean class="com.bedrock.common.CommonInterceptor"></bean>    
    </mvc:interceptor>  
    当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  
	</mvc:interceptors>  -->  
	
	<!-- 设置freeMarker的配置文件路径 -->    
    <bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">    
        <property name="location" value="classpath:freemarker.properties"/>    
    </bean>  
      
    <!-- 配置freeMarker的模板路径 -->    
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"> 
    	<property name="defaultEncoding" value="UTF-8" /> 
        <property name="freemarkerSettings" ref="freemarkerConfiguration"/>    
        <property name="templateLoaderPath">    
            <value>/WEB-INF/views/</value>    
        </property>  
    </bean>  
        
    <!-- 配置freeMarker视图解析器 -->    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"> 
	    <property name="cache" value="false" />   
	    <property name="suffix" value=".html" />   
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>    
        <property name="contentType" value="text/html; charset=utf-8"/>    
    </bean> 
</beans>  